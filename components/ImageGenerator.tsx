
import React, { useState, useCallback } from 'react';
import { generateImage } from '../services/geminiService';
import Card from './common/Card';
import { SparklesIcon } from './icons/SparklesIcon';

const ImageGenerator: React.FC = () => {
  const [prompt, setPrompt] = useState<string>('A photorealistic image of a cat wearing a tiny wizard hat, sitting on a pile of ancient books.');
  const [imageUrl, setImageUrl] = useState<string>('');
  const [loading, setLoading] = useState<boolean>(false);
  const [error, setError] = useState<string>('');

  const handleGenerate = useCallback(async () => {
    if (!prompt.trim()) {
      setError('Please enter a prompt.');
      return;
    }
    setLoading(true);
    setError('');
    setImageUrl('');

    try {
      const url = await generateImage(prompt);
      setImageUrl(url);
    } catch (err) {
      setError(err instanceof Error ? err.message : 'An unknown error occurred.');
    } finally {
      setLoading(false);
    }
  }, [prompt]);

  return (
    <Card className="p-6">
      <h2 className="text-2xl font-bold text-gray-800 dark:text-white mb-4">AI Image Generator</h2>
      <p className="text-gray-600 dark:text-gray-300 mb-6">Describe an image and let Gemini's Imagen 4 bring it to life. Be as descriptive as you like!</p>

      <div className="space-y-4 mb-6">
        <textarea
          value={prompt}
          onChange={(e) => setPrompt(e.target.value)}
          placeholder="e.g., A majestic lion with a crown of stars"
          className="w-full h-24 px-4 py-2 bg-gray-100 dark:bg-gray-700 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-violet-500"
          disabled={loading}
        />
        <button
          onClick={handleGenerate}
          className="w-full flex items-center justify-center px-6 py-3 bg-violet-600 text-white font-semibold rounded-md shadow-md hover:bg-violet-700 disabled:bg-violet-400 disabled:cursor-not-allowed transition-colors"
          disabled={loading}
        >
          <SparklesIcon className="w-5 h-5 mr-2" />
          {loading ? 'Generating...' : 'Generate Image'}
        </button>
      </div>

      {error && <p className="text-red-500 bg-red-100 dark:bg-red-900/50 p-3 rounded-md">{error}</p>}

      {loading && (
        <div className="text-center">
            <div className="flex justify-center items-center">
                <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-violet-500"></div>
            </div>
            <p className="mt-3 text-lg text-gray-600 dark:text-gray-300">Creating your image... this may take a moment.</p>
        </div>
      )}

      {imageUrl && (
        <div className="mt-6">
          <h3 className="text-xl font-bold text-gray-800 dark:text-white mb-4">Result</h3>
          <div className="bg-gray-200 dark:bg-gray-700 rounded-lg overflow-hidden shadow-lg">
            <img src={imageUrl} alt="Generated by AI" className="w-full h-full object-cover" />
          </div>
        </div>
      )}
    </Card>
  );
};

export default ImageGenerator;
